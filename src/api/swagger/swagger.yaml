swagger: "2.0"
info:
  version: "0.2.0"
  title: Laundree App

host: laundree.io
basePath: '/api'
schemes:
  - https

consumes:
  - application/json
  - application/octet-stream

produces:
  - application/json

securityDefinitions:
  auth0:
    authorizationUrl: "https://laundree-test.eu.auth0.com/authorize"
    flow: "implicit"
    type: "oauth2"

security:
  - jwt: []

paths:
  /users:
    x-swagger-router-controller: users
    get:
      description: List users.
      operationId: listUsers
      parameters:
        - name: email
          in: query
          description: Filter by email
          required: false
          type: string
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      tags:
        - Users
      responses:
        "200":
          headers:
            Link:
              description: Link header
              type: string
          description: A list of users
          schema:
            type: array
            items:
              $ref: "#/definitions/UserSummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Create a new user.
      operationId: createUser
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required:
              - displayName
              - email
              - password
            properties:
              displayName:
                $ref: "#/definitions/nonEmpty"
              email:
                type: string
                format: email
              password:
                $ref: "#/definitions/password"
      tags:
        - Users
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}:
    x-swagger-router-controller: users
    get:
      description: Returns user with given Id.
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: The user to be queried
          required: true
          type: string
      tags:
        - Users
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put:
      description: Update a user
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: The user to be updated
          required: true
          type: string
        - name: body
          in: body
          description: New info
          schema:
            properties:
              name:
                $ref: "#/definitions/name"
      tags:
        - Users
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      description: Delete a given user
      operationId: deleteUser
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          description: The user to be deleted
          required: true
          type: string
      responses:
        "204":
          description: Success
        "404":
          description: User not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}/emails:
    x-swagger-router-controller: users
    get:
      description: Get user emails
      operationId: fetchUserEmails
      parameters:
        - name: userId
          in: path
          required: true
          description: The user to be queried
          type: string
      tags:
        - Users
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
              format: email
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}/one-signal-player-ids:
    x-swagger-router-controller: users
    post:
      description: Register a OneSignal player id
      operationId: addOneSignalPlayerId
      parameters:
        - name: userId
          in: path
          required: true
          description: The user to be queried
          type: string
        - name: body
          in: body
          required: true
          schema:
            required:
              - playerId
            properties:
              playerId:
                $ref: "#/definitions/uuid"
      tags:
        - Users
      responses:
        "204":
          description: Success
        "404":
          description: User not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /users/{userId}/start-password-reset:
    x-swagger-router-controller: users
    post:
      description: Start user password reset
      operationId: startPasswordReset
      parameters:
        - name: userId
          in: path
          required: true
          description: The user to be queried
          type: string
        - name: body
          in: body
          schema:
            properties:
              locale:
                $ref: "#/definitions/locale"
      tags:
        - Users
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}/password-reset:
    x-swagger-router-controller: users
    post:
      description: Reset user password
      operationId: passwordReset
      parameters:
        - name: userId
          in: path
          required: true
          description: The user to be queried
          type: string
        - name: body
          in: body
          required: true
          schema:
            required:
              - password
              - token
            properties:
              password:
                $ref: "#/definitions/password"
              token:
                type: string
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}/password-change:
    x-swagger-router-controller: users
    post:
      tags:
        - Users
      description: Start password change
      operationId: changeUserPassword

      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            required:
              - currentPassword
              - newPassword
            properties:
              currentPassword:
                $ref: "#/definitions/password"
              newPassword:
                $ref: "#/definitions/password"
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /users/{userId}/start-email-verification:
    x-swagger-router-controller: users
    post:
      description: Start email verification
      operationId: startEmailVerification
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            required:
              - email
            properties:
              locale:
                $ref: "#/definitions/locale"
              email:
                type: string
                format: email
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /users/{userId}/verify-email:
    x-swagger-router-controller: users
    post:
      description: Verify a user email
      operationId: verifyEmail
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            required:
              - email
              - token
            properties:
              email:
                type: string
                format: email
              token:
                type: string
      tags:
        - Users
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /tokens:
    x-swagger-router-controller: tokens
    get:
      description: List available tokens
      operationId: listTokens
      tags:
        - Tokens
      parameters:
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/TokenSummary"

        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"

        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      description: Create a new token
      operationId: createToken
      tags:
        - Tokens
      parameters:
        - name: body
          in: body
          schema:
            required:
              - name
            properties:
              name:
                $ref: "#/definitions/name"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TokenWithSecret"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: Token conflict
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /tokens/email-password:
    x-swagger-router-controller: tokens
    post:
      operationId: createTokenFromEmailPassword
      tags:
        - Tokens
      parameters:
        - name: body
          in: body
          schema:
            required:
              - name
              - email
              - password
            properties:
              name:
                $ref: "#/definitions/name"
              email:
                type: string
                format: email
              password:
                $ref: "#/definitions/password"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: Token conflict
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /tokens/{tokenId}:
    x-swagger-router-controller: tokens
    get:
      operationId: fetchToken
      tags:
        - Tokens
      parameters:
        - name: tokenId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Token"
        "404":
          description: Token not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteToken
      tags:
        - Tokens
      parameters:
        - name: tokenId
          in: path
          required: true
          type: string
      responses:
        "204":
          description: Success
        "404":
          description: Token not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /laundries:
    x-swagger-router-controller: laundries
    get:
      description: Lists the current laundries
      operationId: listLaundries
      parameters:
        - name: page_size
          in: query
          description: The maximum page-size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      tags:
        - Laundries
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/LaundrySummary"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - Laundries

      description: Create a laundry
      operationId: createLaundry
      parameters:
        - name: body
          in: body
          schema:
            required:
              - name
              - googlePlaceId
            properties:
              name:
                $ref: "#/definitions/name"
              googlePlaceId:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Laundry"
        "409":
          description: Conflict
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /laundries/demo:
    x-swagger-router-controller: laundries
    post:
      tags:
        - Laundries
      description: Create a demo laundry
      operationId: createDemoLaundry
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            properties:
              email:
                type: string
                format: email
              password:
                $ref: "#/definitions/password"
        "409":
          description: Conflict
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /laundries/{laundryId}:
    x-swagger-router-controller: laundries
    put:
      operationId: updateLaundry
      tags:
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            properties:
              name:
                type: string
              googlePlaceId:
                type: string
              rules:
                properties:
                  limit:
                    type: number
                    format: int32
                    minimum: 0
                  dailyLimit:
                    type: number
                    format: int32
                    minimum: 0
                  timeLimit:
                    required:
                      - from
                      - to
                    properties:
                      from:
                        $ref: "#/definitions/Time"
                      to:
                        $ref: "#/definitions/Time"
      responses:
        "204":
          description: Success
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: Machine conflict
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

    get:
      operationId: fetchLaundry
      tags:
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Laundry"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteLaundry
      tags:
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
      responses:
        "204":
          description: Success
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /laundries/{laundryId}/machines:
    x-swagger-router-controller: machines
    get:
      description: Lists the machines
      operationId: listMachines
      tags:
        - Machines
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Laundry id
        - name: page_size
          in: query
          description: Page size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/MachineSummary"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createMachine
      tags:
        - Machines
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            required:
              - name
              - type
              - broken
            properties:
              broken:
                type: boolean
              type:
                $ref: "#/definitions/machineType"
              name:
                $ref: "#/definitions/name"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Machine"
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: Machine conflict
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /laundries/{laundryId}/owners/{userId}:
    x-swagger-router-controller: laundries
    post:
      operationId: addOwner
      tags:
        - Laundries
        - Users
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
        - name: userId
          in: path
          required: true
          type: string
          description: User id
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: removeOwner
      tags:
        - Laundries
        - Users
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
        - name: userId
          in: path
          required: true
          type: string
          description: User id
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /laundries/{laundryId}/users/add-from-code:
    x-swagger-router-controller: laundries
    post:
      operationId: addUserFromCode
      tags:
        - Laundries
        - Users
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            required:
              - key
            properties:
              key:
                type: string
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /laundries/{laundryId}/users/{userId}:
    x-swagger-router-controller: laundries
    delete:
      operationId: removeUserFromLaundry
      tags:
        - Laundries
        - Users
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
        - name: userId
          in: path
          required: true
          type: string
          description: User id
      responses:
        "204":
          description: Success
        "404":
          description: Not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /laundries/{laundryId}/invite-by-email:
    x-swagger-router-controller: laundries
    post:
      operationId: inviteUserByEmail
      tags:
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            required:
              - email
            properties:
              email:
                type: string
                format: email
              locale:
                $ref: "#/definitions/locale"
      responses:
        "204":
          description: Success
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /laundries/{laundryId}/invite-code:
    x-swagger-router-controller: laundries
    post:
      operationId: createInviteCode
      tags:
        - Laundries
      parameters:
        - name: laundryId
          in: path
          required: true
          type: string
          description: Machine id
      responses:
        "200":
          description: Success
          schema:
            properties:
              key:
                type: string
              href:
                type: string
            required:
              - key
              - href
        "404":
          description: Laundry not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /machines/{machineId}:
    x-swagger-router-controller: machines
    get:
      operationId: fetchMachine
      tags:
        - Machines
      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Machine"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: updateMachine
      tags:
        - Machines
      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            properties:
              broken:
                type: boolean
              type:
                $ref: "#/definitions/machineType"
              name:
                $ref: "#/definitions/name"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Machine"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: Machine conflict
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

    delete:
      operationId: deleteMachine
      tags:
        - Machines
      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
      responses:
        "204":
          description: Success
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

  /machines/{machineId}/bookings:
    x-swagger-router-controller: bookings
    get:
      description: Lists the bookings
      operationId: listBookings
      tags:
        - Bookings
        - Machines

      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
        - name: since
          in: query
          description: Since a given id
          required: false
          type: string
        - name: page_size
          in: query
          description: Page size
          default: 10
          required: false
          type: integer
          minimum: 1
          maximum: 100
        - name: from
          in: query
          description: From date in seconds since epoch
          required: true
          type: integer
        - name: to
          in: query
          description: To date in seconds since epoch
          required: true
          type: integer
          format: date-time
      responses:
        "200":
          description: Success
          headers:
            Link:
              description: Link header
              type: string
          schema:
            type: array
            items:
              $ref: "#/definitions/BookingSummary"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: createBooking
      tags:
        - Bookings

      parameters:
        - name: machineId
          in: path
          required: true
          type: string
          description: Machine id
        - name: body
          in: body
          required: true
          schema:
            required:
              - from
              - to
            properties:
              from:
                $ref: "#/definitions/Date"
              to:
                $ref: "#/definitions/Date"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Booking"
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Machine not found
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
        "409":
          description: Booking conflict
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"


  /bookings/{bookingId}:
    x-swagger-router-controller: bookings
    put:
      operationId: updateBooking
      tags:
        - Bookings
      parameters:
        - name: bookingId
          in: path
          required: true
          type: string
          description: Booking id
        - name: body
          in: body
          required: true
          schema:
            properties:
              from:
                $ref: "#/definitions/Date"
              to:
                $ref: "#/definitions/Date"
      responses:
        "204":
          description: Success
        "400":
          description: Invalid input
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Booking not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"

    get:
      operationId: fetchBooking
      tags:
        - Bookings
      parameters:
        - name: bookingId
          in: path
          required: true
          type: string
          description: Booking id
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Booking"
        "404":
          description: Booking not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteBooking
      tags:
        - Bookings
      parameters:
        - name: bookingId
          in: path
          required: true
          type: string
          description: Booking id
      responses:
        "204":
          description: Success
        "404":
          description: Booking not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /invites/{inviteId}:
    x-swagger-router-controller: invites
    get:
      operationId: fetchInvite
      tags:
        - Invites
      parameters:
        - name: inviteId
          in: path
          required: true
          type: string
          description: Invite id
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Invite"
        "404":
          description: Invite not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteInvite
      tags:
        - Invites
      parameters:
        - name: inviteId
          in: path
          required: true
          type: string
          description: Invite id
      responses:
        "204":
          description: Success
        "404":
          description: Invite not found
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"
  /contact:
    x-swagger-router-controller: contact
    post:
      operationId: contact
      tags:
        - Contact
      parameters:
        - name: body
          in: body
          required: true
          schema:
            required:
              - message
              - subject
            properties:
              message:
                $ref: "#/definitions/nonEmpty"
              name:
                $ref: "#/definitions/nonEmpty"
              subject:
                $ref: "#/definitions/nonEmpty"
              email:
                type: string
                format: email
              locale:
                $ref: "#/definitions/locale"
      responses:
        "204":
          description: Success
        "400":
          description: Error
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Error
          schema:
            $ref: "#/definitions/Error"


  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    required:
      - id
      - href
      - name
      - displayName
      - photo
      - tokens
    properties:
      id:
        type: string
      photo:
        type: string
        format: url
      displayName:
        type: string
      lastSeen:
        type: string
        format: date-time
      name:
        properties:
          familyName:
            type: string
          givenName:
            type: string
          middleName:
            type: string
      href:
        type: string
        format: url
      laundries:
        type: array
        items:
          $ref: "#/definitions/LaundrySummary"
      tokens:
        type: array
        items:
          $ref: "#/definitions/TokenSummary"

  UserSummary:
    required:
      - id
      - displayName
      - href
    properties:
      id:
        type: string
      displayName:
        type: string
      href:
        type: string
        format: url

  Laundry:
    required:
      - id
      - name
      - href
      - owners
      - users
    properties:
      id:
        type: string
      name:
        type: string
      href:
        type: string
      owners:
        type: array
        items:
          $ref: "#/definitions/UserSummary"
      users:
        type: array
        items:
          $ref: "#/definitions/UserSummary"
      machines:
        type: array
        items:
          $ref: "#/definitions/MachineSummary"
      invites:
        type: array
        items:
          $ref: "#/definitions/InviteSummary"
  LaundrySummary:
    required:
      - id
      - name
      - href
    properties:
      id:
        type: string
      name:
        type: string
      href:
        type: string
        format: url

  Token:
    required:
      - id
      - name
      - href
      - owner
    properties:
      id:
        type: string
      name:
        type: string
      href:
        type: string
      lastSeen:
        type: string
        format: date-time
      owner:
        $ref: "#/definitions/UserSummary"
  TokenWithSecret:
    required:
      - id
      - name
      - href
      - owner
      - secret
    properties:
      id:
        type: string
      secret:
        type: string
      name:
        type: string
      href:
        type: string
      lastSeen:
        type: string
        format: date-time
      owner:
        $ref: "#/definitions/UserSummary"

  TokenSummary:
    required:
      - id
      - name
      - href
    properties:
      id:
        type: string
      name:
        type: string
      href:
        type: string
  Booking:
    required:
      - id
      - href
      - from
      - to
    properties:
      id:
        type: string
      href:
        type: string
      from:
        $ref: "#/definitions/Date"
      to:
        $ref: "#/definitions/Date"
      owner:
        type: string

  BookingSummary:
    required:
      - id
      - href
    properties:
      id:
        type: string
      href:
        type: string
  MachineSummary:
    required:
      - id
      - href
      - name
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
  Invite:
    required:
      - id
      - href
      - email
      - laundry
    properties:
      id:
        type: string
      href:
        type: string
      email:
        type: string
        format: email
      laundry:
        $ref: "#/definitions/LaundrySummary"
  InviteSummary:
    required:
      - id
      - href
      - email
    properties:
      id:
        type: string
      href:
        type: string
      email:
        type: string
        format: email
  Machine:
    required:
      - id
      - href
      - name
      - type
      - broken
    properties:
      id:
        type: string
      href:
        type: string
      name:
        type: string
      type:
        $ref: "#/definitions/machineType"
      broken:
        type: boolean
  Date:
    required:
      - year
      - month
      - day
      - hour
      - minute
    properties:
      year:
        type: integer
      month:
        type: integer
      day:
        type: integer
      hour:
        type: integer
      minute:
        type: integer
        enum:
          - 0
          - 30
  Time:
    required:
      - hour
      - minute
    properties:
      hour:
        type: integer
      minute:
        type: integer
        enum:
          - 0
          - 30
  Error:
    required:
      - message
    properties:
      message:
        type: string
  machineType:
    type: string
    enum:
      - wash
      - dry
  password:
    type: string
    format: password
    pattern: '([a-zA-Z].{5,}|.[a-zA-Z].{4,}|.{2,}[a-zA-Z].{3,}|.{3,}[a-zA-Z].{2,}|.{4,}[a-zA-Z].|.{5,}[a-zA-Z])'
  locale:
    type: string
    enum:
      - 'en'
      - 'da'
  uuid:
    type: string
    pattern: '^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$'
  name:
    type: string
    pattern: ([^\s]+)
  nonEmpty:
    type: string
    pattern: ([^\s]+)
